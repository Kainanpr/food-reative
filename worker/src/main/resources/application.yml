spring:
  r2dbc:
    url: r2dbc:mysql://${FOOD_DB_HOST:localhost}:${FOOD_DB_PORT:3306}/${FOOD_DB_NAME:food_reactive}${FOOD_DB_ADDITIONAL_OPTIONS:?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC}
    name: ${FOOD_DB_NAME:food_reactive}
    username: ${FOOD_DB_USERNAME:root}
    password: ${FOOD_DB_PASSWORD:1234}

  kafka:
    bootstrap-servers: ${FOOD_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      auto-offset-reset: earliest
      group-id: ${FOOD_KAFKA_ENV_PREFIX:DEV}-city.group
      max-poll-records: ${FOOD_KAFKA_MAX_POLL_RECORDS:500}

kafka:
  default-max-attempts: ${FOOD_KAFKA_DEFAULT_MAX_ATTEMPTS:3}
  default-back-off-second: ${FOOD_KAFKA_DEFAULT_BACK_OFF_SECOND:2}
  max-poll-interval-ms: ${FOOD_KAFKA_MAX_POLL_INTERVAL_MS:300000}
  topics:
    state-command:
      name-prefix: ${FOOD_KAFKA_ENV_PREFIX:DEV}-state.command
      partitions: ${FOOD_KAFKA_TOPIC_STATE_COMMAND_PARTITIONS:1}
      replicas: ${FOOD_KAFKA_TOPIC_STATE_COMMAND_REPLICAS:1}
    state-event:
      name-prefix: ${FOOD_KAFKA_ENV_PREFIX:DEV}-state.event
      partitions: ${FOOD_KAFKA_TOPIC_STATE_EVENT_PARTITIONS:1}
      replicas: ${FOOD_KAFKA_TOPIC_STATE_EVENT_REPLICAS:1}
    city-event:
      name-prefix: ${FOOD_KAFKA_ENV_PREFIX:DEV}-city.event
      partitions: ${FOOD_KAFKA_TOPIC_CITY_EVENT_PARTITIONS:1}
      replicas: ${FOOD_KAFKA_TOPIC_CITY_EVENT_REPLICAS:1}

flyway:
  url: jdbc:mysql://${FOOD_DB_HOST:localhost}:${FOOD_DB_PORT:3306}/${FOOD_DB_NAME:food_reactive}${FOOD_DB_ADDITIONAL_OPTIONS:?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC}
  schemas: ${FOOD_DB_NAME:food_reactive}
  username: ${FOOD_DB_USERNAME:root}
  password: ${FOOD_DB_PASSWORD:1234}
  baseline-on-migrate: true
